- name: Check if VolumeSnapshotClass already exists
  ansible.builtin.command: kubectl get volumesnapshotclass {{ snapshot_class_name }} -o name
  register: snapshotclass_check
  failed_when: false
  changed_when: false

- name: Set snapshot class facts
  ansible.builtin.set_fact:
    snapshot_class_name: "{{ 'velero-azure-snapshot-class' if cloud_provider == 'azure' else 'velero-vsphere-snapshot-class' }}"

- name: Create VolumeSnapshotClass if not exists
  ansible.builtin.copy:
    src: "{{ 'files/volumesnapshotclass-azure.yaml' if cloud_provider == 'azure' else 'files/volumesnapshotclass-vsphere.yaml' }}"
    dest: /tmp/{{ snapshot_class_name }}.yaml
  when: snapshotclass_check.rc != 0

- name: Apply VolumeSnapshotClass YAML
  ansible.builtin.command: kubectl apply -f /tmp/{{ snapshot_class_name }}.yaml
  when: snapshotclass_check.rc != 0

- name: Annotate VolumeSnapshotClass for Velero
  ansible.builtin.command: >
    kubectl annotate volumesnapshotclass {{ snapshot_class_name }} velero.io/csi-volumesnapshot-class="true" --overwrite
  register: annotate_result
  changed_when: "'annotated' in annotate_result.stdout or 'configured' in annotate_result.stdout"

- name: Verify VolumeSnapshotClass setup
  ansible.builtin.command: kubectl get volumesnapshotclass {{ snapshot_class_name }} -o yaml
  register: snapshotclass_info
  changed_when: false

- name: Display VolumeSnapshotClass info
  ansible.builtin.debug:
    msg: "{{ snapshotclass_info.stdout }}"
