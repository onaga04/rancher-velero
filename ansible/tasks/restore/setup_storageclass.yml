---
- name: Set up StorageClass for Velero restore on Azure
  hosts: localhost
  gather_facts: no
  vars:
    storage_class_name: "azure-csi"
    provisioner: "disk.csi.azure.com"
    sku_name: "StandardSSD_LRS"   # or Premium_LRS
    kind: "Managed"
    caching_mode: "None"
    reclaim_policy: "Delete"
    volume_binding_mode: "WaitForFirstConsumer"
    allow_volume_expansion: true

  tasks:
    - name: Check if StorageClass already exists
      ansible.builtin.command: kubectl get storageclass {{ storage_class_name }} -o name
      register: sc_check
      failed_when: false
      changed_when: false

    - name: Create StorageClass manifest file
      ansible.builtin.copy:
        dest: /tmp/{{ storage_class_name }}.yaml
        content: |
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: {{ storage_class_name }}
          provisioner: {{ provisioner }}
          parameters:
            skuName: {{ sku_name }}
            kind: {{ kind }}
            cachingMode: {{ caching_mode }}
          reclaimPolicy: {{ reclaim_policy }}
          volumeBindingMode: {{ volume_binding_mode }}
          allowVolumeExpansion: {{ allow_volume_expansion | lower }}
      when: sc_check.rc != 0

    - name: Apply StorageClass manifest
      ansible.builtin.command: kubectl apply -f /tmp/{{ storage_class_name }}.yaml
      when: sc_check.rc != 0

    - name: Verify StorageClass creation
      ansible.builtin.command: kubectl get storageclass {{ storage_class_name }} -o yaml
      register: sc_info
      changed_when: false

    - name: Display StorageClass details
      ansible.builtin.debug:
        msg: "{{ sc_info.stdout }}"

