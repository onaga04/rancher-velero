---
- name: Velero Backup Setup (Source Cluster)
  hosts: all
  become: yes
  vars_files:
    - group_vars/all.yml

  tasks:
    - name: Install Azure CLI
      apt:
        name: azure-cli
        state: present
        update_cache: yes

    - name: Download Velero CLI
      get_url:
        url: "https://github.com/vmware-tanzu/velero/releases/download/{{ velero_version }}/velero-{{ velero_version }}-linux-amd64.tar.gz"
        dest: /tmp/velero.tar.gz

    - name: Extract Velero CLI
      unarchive:
        src: /tmp/velero.tar.gz
        dest: /tmp/
        remote_src: yes

    - name: Move Velero binary
      command: mv /tmp/velero-{{ velero_version }}-linux-amd64/velero /usr/local/bin/velero
      args:
        creates: /usr/local/bin/velero

    - name: Set PATH and kubeconfig for RKE2
      lineinfile:
        path: /root/.bashrc
        line: 'export PATH=$PATH:/var/lib/rancher/rke2/bin/ && export KUBECONFIG=/etc/rancher/rke2/rke2.yaml'
        create: yes

    - name: Log into Azure
      shell: |
        az login --service-principal \
          -u {{ azure_client_id }} \
          -p {{ azure_client_secret }} \
          --tenant {{ azure_tenant_id }}
      register: azure_login
      changed_when: "'Logged in' in azure_login.stdout or 'already logged in' in azure_login.stdout"

    - name: Set Azure subscription
      command: az account set -s {{ azure_backup_subscription_id }}

    - name: Create Velero credentials file
      template:
        src: credentials-velero.txt.j2
        dest: /root/credentials-velero.txt
        mode: 0600

    - name: Install Velero on cluster
      shell: |
        velero install \
        --provider azure \
        --plugins velero/velero-plugin-for-microsoft-azure:{{ azure_plugin_version }} \
        --bucket {{ blob_container }} \
        --secret-file ./credentials-velero.txt \
        --backup-location-config resourceGroup={{ azure_backup_resource_group }},storageAccount={{ azure_storage_account_id }},subscriptionId={{ azure_backup_subscription_id }} \
        --features=EnableCSI \
        --use-node-agent

    - name: Validate Velero pods
      shell: kubectl -n velero get pods
      register: velero_pods
      changed_when: false

    - debug:
        msg: "{{ velero_pods.stdout }}"

    - name: Create VolumeSnapshotClass for Velero
      copy:
        dest: /tmp/volumesnapshotclass.yaml
        content: |
          apiVersion: snapshot.storage.k8s.io/v1
          kind: VolumeSnapshotClass
          metadata:
            name: velero-azure-snapshot-class
            labels:
              velero.io/csi-volumesnapshot-class: "true"
          driver: disk.csi.azure.com
          deletionPolicy: Delete
          parameters:
            incremental: "true"

    - name: Apply VolumeSnapshotClass
      command: kubectl apply -f /tmp/volumesnapshotclass.yaml

    - name: Annotate VolumeSnapshotClass
      command: kubectl annotate volumesnapshotclass velero-azure-snapshot-class velero.io/csi-volumesnapshot-class="true" --overwrite

    - name: Create Velero backup
      shell: |
        velero backup create {{ backup_name }} \
          --exclude-namespaces kube-system,kube-public,kube-node-lease,default,velero,cattle-system,cattle-fleet-system,fleet-default \
          --snapshot-volumes \
          --snapshot-move-data \
          --wait
